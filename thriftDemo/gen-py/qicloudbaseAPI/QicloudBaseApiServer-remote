#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

# from qicloudbaseAPI import QicloudBaseApiServer
# from qicloudbaseAPI.ttypes import *
import QicloudBaseApiServer
from ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  string Ping(string str)'
  print '  QiVersionInfo GetVersionInfo()'
  print '  i32 addStorageInfo(QiStorageInfo info)'
  print '  i32 delStorageInfo(string id)'
  print '   getStorageInfoList()'
  print '   getTempalteInfoList()'
  print '  i32 addTemplateInfo(QiTemplateInfo info)'
  print '  i32 delTemplateInfo(string id)'
  print '  i32 modifyTemplateInfo(QiTemplateInfo info)'
  print '  QiTemplateInfo getTemplateInfo(string id)'
  print '  i32 addHostInfo(QiHostInfo info)'
  print '   getHostInfoList()'
  print '  i32 delHostInfo(string ip)'
  print '  i32 modifyHostInfo(QiHostInfo info)'
  print '  QiHostInfo getHostInfo(string ip)'
  print '  i32 createInstance(QiInstanceBaseInfo info)'
  print '  i32 startInstance(QiHostInfo info, string uuid, i32 displayProcotol)'
  print '  i32 addinterfaceInfo(string uuid, QiInterfaceInfo info)'
  print '  i32 delinterfaceInfo(string uuid, string id)'
  print '  i32 addDiskInfo(string uuid, QiDiskInfo info)'
  print '  i32 delDiskInfo(string uuid, string id)'
  print '  i32 instanceAddISOFile(string uuid, string isoid)'
  print '  i32 instanceRemoveISOFile(string uuid)'
  print '  i32 shutdownInstance(string uuid)'
  print '  i32 poweroffInstance(string uuid)'
  print '  i32 resetInstance(string uuid)'
  print '  i32 delInstance(string id)'
  print '  QiInstanceInfo getInstanceInfo(string uuid)'
  print '   getAllInstanceInfoList()'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9998
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = QicloudBaseApiServer.Client(protocol)
transport.open()

if cmd == 'Ping':
  if len(args) != 1:
    print 'Ping requires 1 args'
    sys.exit(1)
  pp.pprint(client.Ping(args[0],))

elif cmd == 'GetVersionInfo':
  if len(args) != 0:
    print 'GetVersionInfo requires 0 args'
    sys.exit(1)
  pp.pprint(client.GetVersionInfo())

elif cmd == 'addStorageInfo':
  if len(args) != 1:
    print 'addStorageInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.addStorageInfo(eval(args[0]),))

elif cmd == 'delStorageInfo':
  if len(args) != 1:
    print 'delStorageInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.delStorageInfo(args[0],))

elif cmd == 'getStorageInfoList':
  if len(args) != 0:
    print 'getStorageInfoList requires 0 args'
    sys.exit(1)
  pp.pprint(client.getStorageInfoList())

elif cmd == 'getTempalteInfoList':
  if len(args) != 0:
    print 'getTempalteInfoList requires 0 args'
    sys.exit(1)
  pp.pprint(client.getTempalteInfoList())

elif cmd == 'addTemplateInfo':
  if len(args) != 1:
    print 'addTemplateInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.addTemplateInfo(eval(args[0]),))

elif cmd == 'delTemplateInfo':
  if len(args) != 1:
    print 'delTemplateInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.delTemplateInfo(args[0],))

elif cmd == 'modifyTemplateInfo':
  if len(args) != 1:
    print 'modifyTemplateInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.modifyTemplateInfo(eval(args[0]),))

elif cmd == 'getTemplateInfo':
  if len(args) != 1:
    print 'getTemplateInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.getTemplateInfo(args[0],))

elif cmd == 'addHostInfo':
  if len(args) != 1:
    print 'addHostInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.addHostInfo(eval(args[0]),))

elif cmd == 'getHostInfoList':
  if len(args) != 0:
    print 'getHostInfoList requires 0 args'
    sys.exit(1)
  pp.pprint(client.getHostInfoList())

elif cmd == 'delHostInfo':
  if len(args) != 1:
    print 'delHostInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.delHostInfo(args[0],))

elif cmd == 'modifyHostInfo':
  if len(args) != 1:
    print 'modifyHostInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.modifyHostInfo(eval(args[0]),))

elif cmd == 'getHostInfo':
  if len(args) != 1:
    print 'getHostInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.getHostInfo(args[0],))

elif cmd == 'createInstance':
  if len(args) != 1:
    print 'createInstance requires 1 args'
    sys.exit(1)
  pp.pprint(client.createInstance(eval(args[0]),))

elif cmd == 'startInstance':
  if len(args) != 3:
    print 'startInstance requires 3 args'
    sys.exit(1)
  pp.pprint(client.startInstance(eval(args[0]),args[1],eval(args[2]),))

elif cmd == 'addinterfaceInfo':
  if len(args) != 2:
    print 'addinterfaceInfo requires 2 args'
    sys.exit(1)
  pp.pprint(client.addinterfaceInfo(args[0],eval(args[1]),))

elif cmd == 'delinterfaceInfo':
  if len(args) != 2:
    print 'delinterfaceInfo requires 2 args'
    sys.exit(1)
  pp.pprint(client.delinterfaceInfo(args[0],args[1],))

elif cmd == 'addDiskInfo':
  if len(args) != 2:
    print 'addDiskInfo requires 2 args'
    sys.exit(1)
  pp.pprint(client.addDiskInfo(args[0],eval(args[1]),))

elif cmd == 'delDiskInfo':
  if len(args) != 2:
    print 'delDiskInfo requires 2 args'
    sys.exit(1)
  pp.pprint(client.delDiskInfo(args[0],args[1],))

elif cmd == 'instanceAddISOFile':
  if len(args) != 2:
    print 'instanceAddISOFile requires 2 args'
    sys.exit(1)
  pp.pprint(client.instanceAddISOFile(args[0],args[1],))

elif cmd == 'instanceRemoveISOFile':
  if len(args) != 1:
    print 'instanceRemoveISOFile requires 1 args'
    sys.exit(1)
  pp.pprint(client.instanceRemoveISOFile(args[0],))

elif cmd == 'shutdownInstance':
  if len(args) != 1:
    print 'shutdownInstance requires 1 args'
    sys.exit(1)
  pp.pprint(client.shutdownInstance(args[0],))

elif cmd == 'poweroffInstance':
  if len(args) != 1:
    print 'poweroffInstance requires 1 args'
    sys.exit(1)
  pp.pprint(client.poweroffInstance(args[0],))

elif cmd == 'resetInstance':
  if len(args) != 1:
    print 'resetInstance requires 1 args'
    sys.exit(1)
  pp.pprint(client.resetInstance(args[0],))

elif cmd == 'delInstance':
  if len(args) != 1:
    print 'delInstance requires 1 args'
    sys.exit(1)
  pp.pprint(client.delInstance(args[0],))

elif cmd == 'getInstanceInfo':
  if len(args) != 1:
    print 'getInstanceInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.getInstanceInfo(args[0],))

elif cmd == 'getAllInstanceInfoList':
  if len(args) != 0:
    print 'getAllInstanceInfoList requires 0 args'
    sys.exit(1)
  pp.pprint(client.getAllInstanceInfoList())

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
